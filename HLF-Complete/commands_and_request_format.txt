To run the Hyperledger fabric network:
cd FabricNetwork
./start-network.sh

To run the Hyperledger explorer:
//Create the docker network
cd HLF-explorer
//Replace priv_sk name in the first-network.json file
docker-compose up -d

In the browser go to ,localhost:8081 -All the network related details will be available in Hyperledger explorer

To run the SDK, follow these steps:
1.Build the project using IntelliJ or any other IDE. 
2.Generate the jar file.
3.Run the jar file using the following command (to run as a background service): 
nohup java -jar HLF-Java-SDK-demo-0.0.1-SNAPSHOT.jar -Dspring.config.location=application.properties -Dserver.port=9000 & 

To run the UI:
cd HLF-Frontend-UI
//For getting node modules(Execute the command only once)
npm install
npm start

Request Formats:

//Private submit transactions
{
    "chaincodeName": "test-private-cc-1",
    "methodName": "saveDetails",
    "channelName": "mychannel",
    "isTransient":"true",
    "transientKey":"payload",
    "transientValue":"PAYLOAD FROM SDK",
	"inputParameters": ["org-collection","PRV000904", "{\"Name\": \"John\", \"Place\": \"India\"}"]
}

//private querying 
{
    "chaincodeName": "test-private-cc-1",
    "methodName": "getDetails",
    "channelName": "mychannel",
    "value": ["org-collection", "PRV000904"]
}

 
//Public submit transactions 
{
    "chaincodeName": "test-public-cc-1",
    "methodName": "saveDetails",
    "channelName": "mychannel",
    "isTransient":"false",
    "transientKey":"payload",
    "transientValue":"PAYLOAD FROM SDK",
	"inputParameters": ["PUB000902", "{\"Name\": \"John\", \"Place\": \"India\"}"]
}

  
//public querying 
{
    "chaincodeName": "test-public-cc-1",
    "methodName": "getDetails",
    "channelName": "mychannel",
    "value": "PUB0001"
}

 
//for subscribing events 
{
    "eventNameList": ["savePrivateDetails"],
    "channelName": "mychannel",
    "chaincode": "test-private-cc-1",
    "startBlockNumber":10,
    "endBlockNumber":20
}

For using Firefly FabConnect:
Before proceeding to the following steps,replace the hostname in ccp.yaml file
cd firefly-docker
docker-compose up -d

In browser go to localhost:4000/api to access the Firefly FabConnect

For running the transactions:

//Private submit transactions

in /transactions :
{
  "headers": {
    "type": "SendTransaction",
    "signer": "admin",
    "channel": "mychannel",
    "chaincode": "test-private-cc-1"
  },
  "func": "saveDetails",
  "args": ["org-collection","PRV0001", "{\"Name\": \"John\", \"Place\": \"India\"}"],
  "transientMap": {},
  "init": false
}

//private querying 

In /query :

{
  "headers": {
    "signer": "admin",
    "channel": "mychannel",
    "chaincode": "test-private-cc-1"
  },
  "func": "getDetails",
  "args": ["org-collection","PRV0001"],    
  "strongread": false
}

//Public submit transactions


in /transactions :
{
  "headers": {
    "type": "SendTransaction",
    "signer": "admin",
    "channel": "mychannel",
    "chaincode": "test-public-cc-1"
  },
  "func": "saveDetails",
  "args": ["PUB0001", "{\"Name\": \"John\", \"Place\": \"Germany\"}"],
  "transientMap": {},
  "init": false
}

//public querying 

In /query :
{
  "headers": {
    "signer": "admin",
    "channel": "mychannel",
    "chaincode": "test-public-cc-1"
  },
  "func": "getDetails",
  "args": ["PUB0001"],    
  "strongread": false
}

